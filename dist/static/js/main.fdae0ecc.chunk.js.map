{"version":3,"sources":["components/layout/SignedinLinks.js","store/actions/authActions.js","components/layout/SignedoutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/Signin.js","components/auth/Signup.js","store/actions/projectActions.js","components/projects/CreateProject.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedoutLinks","state","console","log","firebase","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","Signin","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signin","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","Signup","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","createProject","authorId","add","Date","CreateProject","history","push","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fdae0ecc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"../../store/actions/authActions\";\r\n\r\nconst SignedinLinks = props => {\r\n\t// props.signOut()\r\n\treturn (\r\n\t\t<ul className=\"right\">\r\n\t\t\t<li>\r\n\t\t\t\t<NavLink to=\"/create\">New Project</NavLink>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<a onClick={props.signOut}>Log out</a>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\r\n\t\t\t\t\t{props.profile.initials}\r\n\t\t\t\t</NavLink>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tsignOut: () => dispatch(signOut())\r\n\t};\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedinLinks);\r\n","export const signin = credentials => {\r\n\treturn (dispatch, getState, { getFirebase }) => {\r\n\t\tconst firebase = getFirebase();\r\n\r\n\t\tfirebase\r\n\t\t\t.auth()\r\n\t\t\t.signInWithEmailAndPassword(credentials.email, credentials.password)\r\n\t\t\t.then(() => {\r\n\t\t\t\tdispatch({ type: \"LOGIN_SUCCESS\" });\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tdispatch({ type: \"LOGIN_ERROR\", err });\r\n\t\t\t});\r\n\t};\r\n};\r\n\r\nexport const signOut = () => {\r\n\treturn (dispatch, getState, { getFirebase }) => {\r\n\t\tconst firebase = getFirebase();\r\n\r\n\t\tfirebase\r\n\t\t\t.auth()\r\n\t\t\t.signOut()\r\n\t\t\t.then(() => {\r\n\t\t\t\tdispatch({ type: \"SIGNOUT_SUCCESS\" });\r\n\t\t\t});\r\n\t};\r\n};\r\n\r\nexport const signUp = newUser => {\r\n\treturn (dispatch, getState, { getFirebase, getFirestore }) => {\r\n\t\tconst firebase = getFirebase();\r\n\t\tconst firestore = getFirestore();\r\n\r\n\t\tfirebase\r\n\t\t\t.auth()\r\n\t\t\t.createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n\t\t\t.then(resp => {\r\n\t\t\t\treturn firestore\r\n\t\t\t\t\t.collection(\"users\")\r\n\t\t\t\t\t.doc(resp.user.uid)\r\n\t\t\t\t\t.set({\r\n\t\t\t\t\t\tfirstName: newUser.firstName,\r\n\t\t\t\t\t\tlastName: newUser.lastName,\r\n\t\t\t\t\t\tinitials: newUser.firstName[0] + newUser.lastName[0]\r\n\t\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\tdispatch({ type: \"SIGNUP_SUCCESS\" });\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tdispatch({ type: \"SIGNUP_ERROR\", err });\r\n\t\t\t});\r\n\t};\r\n};\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst SignedoutLinks = () => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/signup\">Sign Up</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/signin\">Login</NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default SignedoutLinks;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SignedinLinks from \"./SignedinLinks\";\r\nimport SignedoutLinks from \"./SignedoutLinks\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Navbar = props => {\r\n\tconst { auth, profile } = props;\r\n\t// console.log(auth);\r\n\tconst links = auth.uid ? (\r\n\t\t<SignedinLinks profile={profile} />\r\n\t) : (\r\n\t\t<SignedoutLinks />\r\n\t);\r\n\treturn (\r\n\t\t<nav className=\"nav-wrapper grey darken-4\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<Link to=\"/\" className=\"brand-logo\">\r\n\t\t\t\t\tMartPlan\r\n\t\t\t\t</Link>\r\n\t\t\t\t{links}\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n\tconsole.log(state);\r\n\treturn {\r\n\t\tauth: state.firebase.auth,\r\n\t\tprofile: state.firebase.profile\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst Notifications = props => {\r\n\tconst { notifications } = props;\r\n\treturn (\r\n\t\t<div className=\"section\">\r\n\t\t\t<div className=\"card z-depth-0\">\r\n\t\t\t\t<div className=\"card-content\">\r\n\t\t\t\t\t<span className=\"card-title\">Notifications</span>\r\n\t\t\t\t\t<ul className=\"notifications\">\r\n\t\t\t\t\t\t{notifications &&\r\n\t\t\t\t\t\t\tnotifications.map(item => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<li key={item.id}>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"pink-text\">{item.user} </span>\r\n\t\t\t\t\t\t\t\t\t\t<span>{item.content}</span>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"grey-text note-date\">\r\n\t\t\t\t\t\t\t\t\t\t\t{moment(item.time.toDate()).fromNow()}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Notifications;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n\treturn (\r\n\t\t<div className=\"card z-depth-0 project-summary\">\r\n\t\t\t<div className=\"card-content grey-text text-darken-3\">\r\n\t\t\t\t<span className=\"card-title\">{project.title}</span>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tPosted by {project.authorFirstName} {project.authorLastName}\r\n\t\t\t\t</p>\r\n\t\t\t\t<p className=\"grey-text\">\r\n\t\t\t\t\t{moment(project.createdAt.toDate()).calendar()}\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ProjectSummary;\r\n","import React from \"react\";\r\nimport ProjectSummary from \"./ProjectSummary\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProjectList = ({ projects }) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      {projects &&\r\n        projects.map(project => {\r\n          return (\r\n            <Link to={'/project/' + project.id}>\r\n              <ProjectSummary project={project} key={project.id} />\r\n            </Link>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import React, { Component } from \"react\";\r\nimport Notifications from \"./Notifications\";\r\nimport ProjectList from \"../projects/ProjectList\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport class Dashboard extends Component {\r\n\trender() {\r\n\t\t// console.log(this.props)\r\n\r\n\t\tconst { projects, auth, notifications } = this.props;\r\n\t\tif (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\t\treturn (\r\n\t\t\t<div className=\"container dashboard\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col s12 m6\">\r\n\t\t\t\t\t\t<ProjectList projects={projects} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col s12 m5 offset-m1\">\r\n\t\t\t\t\t\t<Notifications notifications={notifications} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\t// console.log(state);\r\n\treturn {\r\n\t\tprojects: state.firestore.ordered.projects,\r\n\t\tauth: state.firebase.auth,\r\n\t\tnotifications: state.firestore.ordered.notifications\r\n\t\t// projects: state.project.projects\r\n\t};\r\n};\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps),\r\n\t// firestoreConnect(['projects'])\r\n\tfirestoreConnect([\r\n\t\t{ collection: \"projects\", orderBy: [\"createdAt\", \"desc\"] },\r\n\t\t{ collection: \"notifications\", limit: 3, orderBy: [\"time\", \"desc\"] }\r\n\t])\r\n)(Dashboard);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nfunction ProjectDetails(props) {\r\n\t// const id = props.match.params.id;\r\n\t// console.log(props);\r\n\tconst { project, auth } = props;\r\n\tif (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n\tif (project) {\r\n\t\treturn (\r\n\t\t\t<div className=\"container section projcet-details\">\r\n\t\t\t\t<div className=\"card z-depth-0\">\r\n\t\t\t\t\t<div className=\"card-content\">\r\n\t\t\t\t\t\t<span className=\"card-title\">{project.title}</span>\r\n\t\t\t\t\t\t<p>{project.content}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"card-action grey lighten-3 greay-text\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\tPosted by {project.authorFirstName} {project.authorLastName}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<div className=\"container center\">\r\n\t\t\t\t<p className=\"white-text\">Loading Project ...</p>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n\t// console.log(state)\r\n\tconst id = ownProps.match.params.id;\r\n\tconst projects = state.firestore.data.projects;\r\n\tconst project = projects ? projects[id] : null;\r\n\treturn {\r\n\t\tproject: project,\r\n\t\tauth: state.firebase.auth\r\n\t};\r\n};\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps),\r\n\tfirestoreConnect([{ collection: \"projects\" }])\r\n)(ProjectDetails);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signin } from \"../../store/actions/authActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\nclass Signin extends Component {\r\n\tstate = {\r\n\t\temail: \"\",\r\n\t\tpassword: \"\"\r\n\t};\r\n\thandleChange = e => {\r\n\t\tthis.setState({\r\n\t\t\t[e.target.id]: e.target.value\r\n\t\t});\r\n\t};\r\n\thandleSubmit = e => {\r\n\t\te.preventDefault();\r\n\t\tthis.props.signin(this.state);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { authError, auth } = this.props;\r\n\t\tif (auth.uid) return <Redirect to=\"/\" />;\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<form onSubmit={this.handleSubmit} className=\"white\">\r\n\t\t\t\t\t<h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n\r\n\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t<label htmlFor=\"email\">Email</label>\r\n\t\t\t\t\t\t<input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t<label htmlFor=\"password\">Password</label>\r\n\t\t\t\t\t\t<input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t<button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n\t\t\t\t\t\t<div className=\"red-text center\">\r\n\t\t\t\t\t\t\t{authError ? <p>{authError}</p> : null}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tauthError: state.auth.authError,\r\n\t\tauth: state.firebase.auth\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tsignin: creds => dispatch(signin(creds))\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signUp } from \"../../store/actions/authActions\";\r\n\r\nclass Signup extends Component {\r\n\tstate = {\r\n\t\temail: \"\",\r\n\t\tpassword: \"\",\r\n\t\tfirstName: \"\",\r\n\t\tlastName: \"\"\r\n\t};\r\n\thandleChange = e => {\r\n\t\tthis.setState({\r\n\t\t\t[e.target.id]: e.target.value\r\n\t\t});\r\n\t};\r\n\thandleSubmit = e => {\r\n\t\te.preventDefault();\r\n\t\t// console.log(this.state);\r\n\t\tthis.props.signUp(this.state);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { auth, authError } = this.props;\r\n\t\tif (auth.uid) return <Redirect to=\"/\" />;\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<form onSubmit={this.handleSubmit} className=\"white\">\r\n\t\t\t\t\t<h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n\r\n\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t<label htmlFor=\"email\">Email</label>\r\n\t\t\t\t\t\t<input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t<label htmlFor=\"password\">Password</label>\r\n\t\t\t\t\t\t<input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t<label htmlFor=\"firstName\">First Name</label>\r\n\t\t\t\t\t\t<input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t<label htmlFor=\"lastName\">Last Name</label>\r\n\t\t\t\t\t\t<input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t<button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n\t\t\t\t\t\t<div className=\"red-text center\">\r\n\t\t\t\t\t\t\t{authError ? <p> {authError} </p> : null}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tauth: state.firebase.auth,\r\n\t\tauthError: state.auth.authError\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tsignUp: newUser => dispatch(signUp(newUser))\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\r\n","// import { firestore } from '../../config/fbConfig'\r\n\r\nexport const createProject = project => {\r\n\treturn (dispatch, getState, { getFirebase, getFirestore }) => {\r\n\t\t// make async call to database\r\n\r\n\t\tconst firestore = getFirestore();\r\n\t\tconst profile = getState().firebase.profile;\r\n\t\tconst authorId = getState().firebase.auth.uid;\r\n\t\tfirestore\r\n\t\t\t.collection(\"projects\")\r\n\t\t\t.add({\r\n\t\t\t\t...project,\r\n\t\t\t\tauthorFirstName: profile.firstName,\r\n\t\t\t\tauthorLastName: profile.lastName,\r\n\t\t\t\tauthorId: authorId,\r\n\t\t\t\tcreatedAt: new Date()\r\n\t\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\tdispatch({ type: \"CREATE_PROJECT\", project });\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tdispatch({ type: \"CREATE_PROJECT_ERROR\", err });\r\n\t\t\t});\r\n\t\t// dispatch({ type: \"CREATE_PROJECT\", project });\r\n\t};\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../store/actions/projectActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass CreateProject extends Component {\r\n\tstate = {\r\n\t\ttitle: \"\",\r\n\t\tcontent: \"\"\r\n\t};\r\n\thandleChange = e => {\r\n\t\tthis.setState({\r\n\t\t\t[e.target.id]: e.target.value\r\n\t\t});\r\n\t};\r\n\thandleSubmit = e => {\r\n\t\te.preventDefault();\r\n\t\t// console.log(this.state);\r\n\t\tthis.props.createProject(this.state);\r\n\t\tthis.props.history.push(\"/\");\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { auth } = this.props;\r\n\t\tif (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<form onSubmit={this.handleSubmit} className=\"white\">\r\n\t\t\t\t\t<h5 className=\"grey-text text-darken-3\">Create Project</h5>\r\n\r\n\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t<label htmlFor=\"title\">Title</label>\r\n\t\t\t\t\t\t<input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t<label htmlFor=\"content\">Project Content</label>\r\n\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\tid=\"content\"\r\n\t\t\t\t\t\t\tclassName=\"materialize-textarea\"\r\n\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t></textarea>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t<button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tauth: state.firebase.auth\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tcreateProject: project => dispatch(createProject(project))\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Navbar from \"./components/layout/Navbar\";\r\nimport Dashboard from \"./components/dashboard/Dashboard\";\r\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\r\nimport Signin from \"./components/auth/Signin\";\r\nimport Signup from \"./components/auth/Signup\";\r\nimport CreateProject from \"./components/projects/CreateProject\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n          <Navbar />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Dashboard} />\r\n            <Route path=\"/project/:id\" component={ProjectDetails} />\r\n            <Route path=\"/signin\" component={Signin} />\r\n            <Route path=\"/signup\" component={Signup} />\r\n            <Route path=\"/create\" component={CreateProject} />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const initState = {\r\n\tauthError: null\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"LOGIN_ERROR\":\r\n\t\t\tconsole.log(\"login error\");\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tauthError: \"Login failed\"\r\n\t\t\t};\r\n\t\tcase \"LOGIN_SUCCESS\":\r\n\t\t\tconsole.log(\"login success\");\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tauthError: null\r\n\t\t\t};\r\n\r\n\t\tcase \"SIGNOUT_SUCCESS\":\r\n\t\t\tconsole.log(\"signout success\");\r\n\t\t\treturn state;\r\n\r\n\t\tcase \"SUGNUP_SUCCESS\":\r\n\t\t\tconsole.log(\"signup success\");\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tauthError: null\r\n\t\t\t};\r\n\t\tcase \"SIGNUP_ERROR\":\r\n\t\t\tconsole.log(\"signup error\");\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tauthError: action.err.message\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default authReducer;\r\n","const initState = {\r\n  projects: [\r\n    {\r\n      id: 1,\r\n      title: \"Quite Smoking\",\r\n      content:\r\n        \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,\"\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Be religious\",\r\n      content:\r\n        \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,\"\r\n    },\r\n    {\r\n      id: 3,\r\n      title: \"Find a good job\",\r\n      content:\r\n        \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,\"\r\n    }\r\n  ]\r\n};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_PROJECT\":\r\n      console.log(\"created project\", action.project);\r\n      return state;\r\n\r\n    case \"CREATE_PROJECT_ERROR\":\r\n      console.log(\"create project error\", action.err);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;\r\n\r\n// const initState = {}\r\n\r\n// const projectReducer = (state = initState, action) => {\r\n//   switch (action.type) {\r\n//     case 'CREATE_PROJECT_SUCCESS':\r\n//       console.log('create project success');\r\n//       return state;\r\n//     case 'CREATE_PROJECT_ERROR':\r\n//       console.log('create project error');\r\n//       return state;\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// export default projectReducer;","import authReducer from \"./authReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport { combineReducers } from \"redux\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;\r\n\r\n// the key name will be the data property on the state object\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyD9VPbuowPNI7-2sORBGDb3KPNThrYC0Z0\",\r\n  authDomain: \"project-management-mart.firebaseapp.com\",\r\n  databaseURL: \"https://project-management-mart.firebaseio.com\",\r\n  projectId: \"project-management-mart\",\r\n  storageBucket: \"project-management-mart.appspot.com\",\r\n  messagingSenderId: \"632258011622\",\r\n  appId: \"1:632258011622:web:6b1dbbd6116978d34a7627\",\r\n  measurementId: \"G-P483755FXX\"\r\n};\r\n// Initialize Firebase\r\n// const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n// export const firestore = firebaseApp.firestore()\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore().settings({ timestampsInSnapshots: true });\r\n// firebase.analytics();\r\n\r\nexport default firebase;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"./store/reducers/rootReducer\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\r\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\r\nimport fbConfig from \"./config/fbConfig\";\r\n\r\nconst store = createStore(\r\n\trootReducer,\r\n\tcompose(\r\n\t\tapplyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\r\n\t\treduxFirestore(fbConfig),\r\n\t\treactReduxFirebase(fbConfig, {\r\n\t\t\tuseFirestoreForProfile: true,\r\n\t\t\tuserProfile: \"users\",\r\n\t\t\tattachAuthIsReady: true\r\n\t\t})\r\n\t)\r\n);\r\n\r\nstore.firebaseAuthIsReady.then(() => {\r\n\tReactDOM.render(\r\n\t\t<Provider store={store}>\r\n\t\t\t<App />\r\n\t\t</Provider>,\r\n\t\tdocument.getElementById(\"root\")\r\n\t);\r\n\r\n\t// If you want your app to work offline and load faster, you can change\r\n\t// unregister() to register() below. Note this comes with some pitfalls.\r\n\t// Learn more about service workers: https://bit.ly/CRA-PWA\r\n\tserviceWorker.unregister();\r\n});\r\n"],"sourceRoot":""}